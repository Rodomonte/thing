Premise: In the inorganic universe of Automania, an anomaly is occurring. Things are becoming self-aware. One Thing was discovered to make up all things
         conceivable. Even the thoughts in our minds. It was recently discovered how to capture these Things, but control them, not so much. This is the result.

Early Gameplay: See DAG early tiers

Late Gameplay:

Object:
Solo/Team:
- Competitive:
  -
Society:
- Concept-focused jobs:
  - Philosophers: Have Realizations using Induction/Deduction of Learned Concepts to Identify DAG neighbors
  - Scientists: Perform Experiments to Learn Identified Concepts
  - Researchers: Gather and supply data to all that use it
- Object-focused jobs:
  - Engineers/Inventors: Create Machines/Devices
  - Mechanics/Technicians: Maintain Machines/Devices
  - Farmers: Feed

Pure Concept:
- All about control, no self

! Should Time depend on Object? Space on Concept? Everything could depend on Concept since everything could be simulated.
  Bad reasoning for Time to not depend on Object. Time and Space depend on both??
! Should Things have Observed/Learned status?
  Observed: Be made aware of this Thing in the DAG (after Observe?)
  Learned: Have access to abilities provided by Thing
! How to play as Object without vision? Can see no details/color?
! How to play as Wave without Concept? Wave depends on Concept?
! All Concepts rely on Being/Self.

! Lol make all synonyms randomly select in DAG, no one could talk about builds with each other

! How to play as Concept: Make AIs aware of thing to partially control them

! STATUS:
  Concepts can be Identified, Learned, and In Use. Must be identified to be learned, learned to be in use.
  Objects can be Identified, Learned to Use, Learned to Create, and In Possesion Of.

! How to identify: Observe a Thing In Use. Automatic identification upon proximity.
  - Concept: Make them think.. Identify random or relevant Concepts?
    e.g. While mining, it could recognize
  - Attribute: Make them improve their own qualities
  - Action: Make them do things.
  - Relation: Make them interact? with another
  - Group: Make them join a / interact with their group

Claim: Everything can be represented in a dependency hierarchy.
Not just a tree, since things can have multiple parent REQs. Not just a graph, since dependencies would be too complicated. -> Directed acyclic graph

- For req, list no ancestors of any other req for that term.
- If 2 or more things work as reqs but only one OR another, the parent of those reqs is the parent of this term. Only when ALL reqs are required simultaneously
  for the same thing would you list both as reqs.
- If 2 things seem to depend on each other (Change/Time), ask, could one conceivably exist without the other? That's the parent.

- I need a process for designing this graph. Prioritization of tasks to speed it up. Currently going top down. Could...
  - Reasearch+list all Thing ideas, then add details or rule them out. This allows the DAG to fill naturally, no wasted time pondering potential relations
  - Research specific Things to find new Things close to it
